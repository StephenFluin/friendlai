name: Build and Release Binaries

on:
  push:
    branches:
      - main

jobs:
  build-and-release:
    name: Build and Release Binaries
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' # Only run on pushes to main
    permissions:
      contents: write # Required to create a release
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Bun
        uses: oven-sh/setup-bun@v1

      - name: Get short SHA
        id: vars
        run: echo "sha=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
        shell: bash

      - name: Install NPM dependencies
        run: npm install ci

      - name: Update Version in worker/version.json
        run: |
          VERSION_FILE="worker/version.json"
          # Read the current version, assuming it's in a format like "0.0.0"
          CURRENT_VERSION=$(jq -r '.version' "$VERSION_FILE")

          # Extract the major and minor parts (e.g., "0.0")
          MAJOR_MINOR_VERSION=$(echo "$CURRENT_VERSION" | sed -E 's/\.[0-9]+$//')

          # Get the GitHub run number
          RUN_NUMBER=${{ github.run_number }}

          # Construct the new version string
          NEW_VERSION="${MAJOR_MINOR_VERSION}.${RUN_NUMBER}"

          # Update the version in the JSON file
          jq --arg newVersion "$NEW_VERSION" '.version = $newVersion' "$VERSION_FILE" > temp.json && mv temp.json "$VERSION_FILE"

          echo "Updated version in $VERSION_FILE to $NEW_VERSION"

      - name: Clean up dist folder
        run: |
          if [ -d dist ]; then
            rm -rf dist/*
          fi
        shell: bash

      - name: Build Linux Binary
        run: bun build worker/worker.ts --compile --target=bun-linux-x64-modern --outfile dist/friendlai-linux

      - name: Build Windows Binary
        run: bun build worker/worker.ts --compile --target=bun-windows-x64-modern --outfile dist/friendlai-windows.exe

      - name: Build macOS Binary
        run: bun build worker/worker.ts --compile --target=bun-darwin-arm64 --outfile dist/friendlai-macos

      - name: Create JSON file with filenames, SHA, and date
        run: |
          cat <<EOF > dist/release-info.json
          {
            "linux": "friendlai-linux",
            "windows": "friendlai-windows.exe",
            "macos": "friendlai-macos",
            "sha": "${{ env.sha }}",
            "version": "$(jq -r '.version' worker/version.json)",
            "date": "$(date -u +"%Y-%m-%dT%H:%M:%SZ")"
          }
          EOF
        shell: bash

      - name: List built files (for debugging)
        run: ls -R dist/
        shell: bash

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: release-${{ github.run_number }}
          name: Release v${{ github.run_number }} (${{ env.sha }})
          files: dist/*
          body: |
            Automated release of Friendlai binaries.
            Commit: ${{ github.sha }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
