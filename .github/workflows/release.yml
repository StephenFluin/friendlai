name: Build and Release Binaries

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build Binaries
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Bun
        uses: oven-sh/setup-bun@v1

      - name: Get short SHA
        id: vars
        run: echo "sha=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
        shell: bash

      - name: Install npm dependencies
        run: npm install ci

      - name: Build Linux Binary
        run: bun build worker/worker.ts --compile --target=bun-linux-x64-modern --outfile dist/friendlai-${{ env.sha }}-linux

      - name: Build Windows Binary
        run: bun build worker/worker.ts --compile --target=bun-windows-x64-modern --outfile dist/friendlai-${{ env.sha }}-windows.exe

      - name: Build macOS Binary
        run: bun build worker/worker.ts --compile --target=bun-darwin-arm64 --outfile dist/friendlai-${{ env.sha }}-macos

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: friendlai-binaries-${{ env.sha }}
          path: dist/
          if-no-files-found: error

  create-release:
    name: Create GitHub Release
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' # Only run on pushes to main
    permissions:
      contents: write # Required to create a release
    steps:
      - name: Get short SHA
        id: vars
        run: echo "sha=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
        shell: bash

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts/ # Download all artifacts to a directory

      - name: List downloaded files (for debugging)
        run: |
          ls -R artifacts/
          echo "SHA is ${{ steps.vars.outputs.sha }}"
        shell: bash

      - name: Debug Variables
        run: |
          echo "Run number: ${{ github.run_number }}"
          echo "SHA: ${{ steps.vars.outputs.sha }}"
        shell: bash

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ github.run_number }}-${{ env.sha }}
          name: Release v${{ github.run_number }} (${{ env.sha }})
          files: artifacts/*
          body: |
            Automated release of Friendlai binaries.
            Commit: ${{ github.sha }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
